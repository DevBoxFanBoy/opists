/*
 * OpenSource Issue Tr√§cking System
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: DevBoxFanBoy@github.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package projects

import (
	"github.com/DevBoxFanBoy/opists/pkg/api/v1"
	"github.com/DevBoxFanBoy/opists/pkg/business/usecase/project"
)

// ProjectsApiService is a service that implements the logic for the ProjectsApiServicer
// This service should implement the business logic for every endpoint for the ProjectsApi API.
// Include any external packages or services that will be required by this service.
type ApiService struct {
	projectUseCase project.UseCase
}

// NewApiService creates a default api service
func NewApiService() v1.ProjectsApiServicer {
	p := project.GetUseCaseControllerInstance()
	return &ApiService{projectUseCase: p}
}

// GetAllProject - Returns all projects
func (s *ApiService) GetAllProject() (interface{}, error) {
	// GetAllProject with the required logic for this service method.
	return s.projectUseCase.GetAllProject()
}

// GetProject - Returns the Project by key
func (s *ApiService) GetProject(projectKey string) (interface{}, error) {
	// GetProject with the required logic for this service method.
	return s.projectUseCase.GetProject(projectKey)
}
