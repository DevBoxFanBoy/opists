/*
 * OpenSource Issue Tr√§cking System
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: DevBoxFanBoy@github.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package service

import (
	"github.com/DevBoxFanBoy/opists/pkg/api/v1"
	"github.com/DevBoxFanBoy/opists/pkg/business"
)

// ProjectsApiService is a service that implements the logic for the ProjectsApiServicer
// This service should implement the business logic for every endpoint for the ProjectsApi API.
// Include any external packages or services that will be required by this service.
type ProjectsApiService struct {
	projectUseCase business.ProjectUseCase
}

// NewProjectsApiService creates a default api service
func NewProjectsApiService() v1.ProjectsApiServicer {
	p := business.ProjectUseCase{}
	return &ProjectsApiService{projectUseCase: p}
}

// GetAllProject - Returns all projects
func (s *ProjectsApiService) GetAllProject() (interface{}, error) {
	// GetAllProject with the required logic for this service method.
	return s.projectUseCase.GetAllProject()
	// Add api_projects_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	//return nil, errors.New("service method 'GetAllProject' not implemented")
}

// GetProject - Returns the Project by key
func (s *ProjectsApiService) GetProject(projectKey string) (interface{}, error) {
	// GetProject with the required logic for this service method.
	return s.projectUseCase.GetProject(projectKey)
	// Add api_projects_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	//return nil, errors.New("service method 'GetProject' not implemented")
}
